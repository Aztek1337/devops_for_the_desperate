---
- name: dftd
  hosts: all
  become: true
  become_method: sudo
  remote_user: ubuntu
  vars_files:
    - vars/default.yml

  tasks:
    - name: Install aptitude using apt
      apt: name=aptitude state=latest update_cache=yes force_apt_get=yes

    - name: Install required system packages
      apt: name={{ item }} state=latest update_cache=yes
      loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common', 'python3-pip', 'virtualenv', 'python3-setuptools']

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu focal stable
        state: present

    - name: Update apt and install docker-ce
      apt: update_cache=yes name=docker-ce state=latest

    - name: Create a directory named 'engineering'
      file:
        path: /etc/systemd/system/docker.service.d
        state: directory
        mode: 0750
    
    - name: Copy over docker.service override
      copy:
        src: files/override.conf
        dest: /etc/systemd/system/docker.service.d/override.conf
        owner: root
        group: root
        mode: '0644'
   
    - name: Restart docker.service and make sure systemd reloads
      ansible.builtin.systemd:
        state: restarted
        daemon_reload: yes
        name: docker.service

    - debug: var=hostvars[inventory_hostname]['ansible_default_ipv4']['address']

    - name: Prints two lines of messages, but only if there is an environment value set
      ansible.builtin.debug:
        msg:
        - "To use Docker, you'll need to export DOCKER_HOST variable locally to connect to the VM"
        - "Enter the following in your termninal where you are going to run your docker commands"
        - "export DOCKER_HOST=tcp://{{hostvars[inventory_hostname]['ansible_default_ipv4']['address']}}:2375"


